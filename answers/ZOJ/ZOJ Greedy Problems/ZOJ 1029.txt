//1029Moving Tables
#include <iostream>
using namespace std;

//	走廊两侧会相撞。

int main()
{
	int case_sum, table_sum, table_mov[200][3], mov_sum, table_tmp, room_max;
	cin>>case_sum;
	while (case_sum --)
	{
		cin>>table_sum;
		for (int i = 0; i < table_sum; i ++)
		{
			cin>>table_mov[i][0]>>table_mov[i][1];
			table_mov[i][0] = (table_mov[i][0] - 1) / 2;
			table_mov[i][1] = (table_mov[i][1] - 1) / 2;
			table_mov[i][2] = NULL;
			if (table_mov[i][0] > table_mov[i][1])
			{
				table_tmp = table_mov[i][0];
				table_mov[i][0] = table_mov[i][1];
				table_mov[i][1] = table_tmp;
			}
		}
		for (int i = 0; i < table_sum; i ++)
		{
			for (int j = 0; j < i; j ++)
			{
				if (table_mov[i][0] < table_mov[j][0]
					|| (table_mov[i][0] == table_mov[j][0] && table_mov[i][1] < table_mov[j][1]))
				{
					table_tmp = table_mov[i][0];
					table_mov[i][0] = table_mov[j][0];
					table_mov[j][0] = table_tmp;
					table_tmp = table_mov[i][1];
					table_mov[i][1] = table_mov[j][1];
					table_mov[j][1] = table_tmp;
				}
			}
		}
		mov_sum = 0;
		for (int i = 0; i < table_sum; i ++)
		{
			if (table_mov[i][2] == NULL)
			{
				table_mov[i][2] = true;
				room_max = table_mov[i][1];
				mov_sum ++;
				for (int j = i + 1; j < table_sum; j ++)
				{
					if (table_mov[j][2] == NULL && table_mov[j][0] > room_max)
					{
						table_mov[j][2] = true;
						room_max = table_mov[j][1];
					}
				}
			}
		}
		cout<<mov_sum * 10<<endl;
	}
	//system("pause");
	return 0;
}