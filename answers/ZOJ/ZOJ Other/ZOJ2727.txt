//2727List the Books
#define _FILE_DEBUG_
//#define _C_LAN_
//#define _DEBUG_OUTPUT_
#ifdef _FILE_DEBUG_
#include <fstream>
#endif
#include <iostream>
#include <stdio.h>
using namespace std;

#include <string>
#include <algorithm>
typedef struct
{
	string name;
	int year, price;
} sbook;
bool cmp_name(sbook a, sbook b)
{
	if (a.name.compare(b.name) < 0)
		return true;
	else if (a.name.compare(b.name) > 0)
		return false;
	if (a.year != b.year)
		return a.year < b.year;
	return a.price < b.price;
}
bool cmp_year(sbook a, sbook b)
{
	if (a.year != b.year)
		return a.year < b.year;
	if (a.name.compare(b.name) < 0)
		return true;
	else if (a.name.compare(b.name) > 0)
		return false;
	return a.price < b.price;
}
bool cmp_price(sbook a, sbook b)
{
	if (a.price != b.price)
		return a.price < b.price;
	if (a.name.compare(b.name) < 0)
		return true;
	else if (a.name.compare(b.name) > 0)
		return false;
	//if (a.year != b.year)
	return a.year < b.year;
}
int main()
{
#ifdef _FILE_DEBUG_
	ifstream fin;
	fin.open("../input.txt");
	cin.rdbuf(fin.rdbuf()); // assign file's streambuf to cin
#ifdef _C_LAN_
	freopen("../input.txt", "r", stdin);
#endif
#endif
#ifdef _FILE_DEBUG_
	ofstream fout;
	fout.open("../output.txt");
	cout.rdbuf(fout.rdbuf()); // assign file's streambuf to cout
#ifdef _C_LAN_
	freopen("../output.txt", "w", stdout);
#endif
#endif

	bool is_first = true;
	sbook book_vec[110];
	int book_sum;
	string criteria;
	while (cin >> book_sum && book_sum > 0)
	{
		for (int i = 0; i < book_sum; i ++)
		{
			cin >> book_vec[i].name >> book_vec[i].year >> book_vec[i].price;
		}
		cin >> criteria;
		switch (criteria.at(0))
		{
		case 'N':
			sort(book_vec, book_vec + book_sum, cmp_name);
			break;
		case 'Y':
			sort(book_vec, book_vec + book_sum, cmp_year);
			break;
		case 'P':
			sort(book_vec, book_vec + book_sum, cmp_price);
			break;
		}
		if (is_first == false)
			cout << endl;
		else
			is_first = false;
		for (int i = 0; i < book_sum; i ++)
		{
			cout << book_vec[i].name << " " << book_vec[i].year << " "
				<< book_vec[i].price << endl;
		}
	}

	return 0;
}