//1808Immediate Decodability
#define _FILE_DEBUG_
//#define _C_LAN_
//#define _DEBUG_OUTPUT_
#ifdef _FILE_DEBUG_
#include <fstream>
#endif
#include <iostream>
#include <stdio.h>
using namespace std;

#include <memory.h>
#include <string>
#define MAX_NUM 100
typedef struct Trie
{
	int flag;
	Trie *one, *zero;
} STrie;
STrie *head, node[MAX_NUM];
int cnt;
int Add(string input)
{
	STrie *ptr = head;
	int len = input.size();
	for (int i = 0; i < len; i ++)
	{
		if (ptr != NULL && ptr->flag == 1)
			return 0;
		ptr->flag = -1;
		if (input.at(i) == '0')
		{
			if (ptr->zero == NULL)
			{
				ptr->zero = &node[cnt ++];
			}
			ptr = ptr->zero;
		}
		else
		{
			if (ptr->one == NULL)
			{
				ptr->one = &node[cnt ++];
			}
			ptr = ptr->one;
		}
	}
	if (ptr->flag != 0)
		return 0;
	ptr->flag = 1;
	return 1;
}
int main()
{
#ifdef _FILE_DEBUG_
	ifstream fin;
	fin.open("../input.txt");
	cin.rdbuf(fin.rdbuf()); // assign file's streambuf to cin
#ifdef _C_LAN_
	freopen("../input.txt", "r", stdin);
#endif
#endif
#ifdef _FILE_DEBUG_
	ofstream fout;
	fout.open("../output.txt");
	cout.rdbuf(fout.rdbuf()); // assign file's streambuf to cout
#ifdef _C_LAN_
	freopen("../output.txt", "w", stdout);
#endif
#endif

	string input;
	int ans, case_num = 1;
	bool ifn_decode;
	while (cin >> input && input.compare("9") != 0)
	{
		cnt = 0;
		memset(node, 0, sizeof(node));
		head = &node[cnt ++];
		ifn_decode = false;
		if (Add(input) == 0)
		{
			ifn_decode = true;
		}
		while (cin >> input && input.compare("9") != 0)
		{
			if (!ifn_decode && Add(input) == 0)
			{
				ifn_decode = true;
			}
		}
		cout << "Set " << case_num ++ << " is ";
		if (ifn_decode)
		{
			cout << "not ";
		}
		cout << "immediately decodable" << endl;
	}

	return 0;
}