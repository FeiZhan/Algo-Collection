//1019Illusive Chase
#include<iostream>
//#include<fstream>
//#define cin filein
using namespace std;
int main()
{
	//ifstream filein("..//data.txt", ios::in);
	int CaseNum, row, column, trip[100][2], i, j, k, l, m, TripNum, myX, myY, myXtemp, myYtemp
		, start;
	bool grid[100][100], FailFlag;
	char TripChar[100];
	cin>>CaseNum;
	while (CaseNum --)
	{
		cin>>row>>column;
		for (i=0; i<row; i++)
		{
			for (j=0; j<column; j++)
			{
				cin>>grid[i][j];
			}
		}
		TripNum = 0;
		while (cin>>trip[TripNum][0]>>trip[TripNum][1]
		&& (trip[TripNum][0] != 0 || trip[TripNum][1] != 0))
		{
			cin>>TripChar[TripNum];
			TripNum ++;
		}
		start = 0;
		for (i=0; i<row; i++)
		{
			for (j=0; j<column; j++)
			{
				myX = i;
				myY = j;
				for (k=0; k<TripNum; k++)
				{
					for (l=trip[k][0]; l<=trip[k][1]; l++)
					{
						FailFlag = false;
						switch (TripChar[k])
						{
						case 'R':
							for (m=myX; m<=myX+l; m++)
							{
								if (m < 0 || m >= row
									|| grid[m][myY] == true)
								{
									FailFlag = true;
									break;
								}
							}
							if (FailFlag == false)
							{
								myX += l;
							}
							break;
						case 'L':
							for (m=myX; m>=myX-l; m--)
							{
								if (m < 0 || m >= row
									|| grid[m][myY] == true)
								{
									FailFlag = true;
									break;
								}
							}
							if (FailFlag == false)
							{
								myX -= l;
							}
							break;
						case 'U':
							for (m=myY; m>=myY-l; m--)
							{
								if (m < 0 || m >= column
									|| grid[myX][m] == true)
								{
									FailFlag = true;
									break;
								}
							}
							if (FailFlag == false)
							{
								myY -= l;
							}
							break;
						case 'D':
							for (m=myY; m<=myY+l; m++)
							{
								if (m < 0 || m >= column
									|| grid[myX][m] == true)
								{
									FailFlag = true;
									break;
								}
							}
							if (FailFlag == false)
							{
								myY += l;
							}
							break;
						}
					}
					if (FailFlag == true)
					{
						break;
					}
				}
				if (FailFlag == false)
				{
					start ++;
					cout<<i<<" "<<j<<endl;
				}
			}
		}
		cout<<start<<endl;
	}
	getchar();getchar();
	return 0;
}