//2101Virtual Keyboard
#include<iostream>
#include <string>
//#include<fstream>
//#define cin filein
using namespace std;
int main()
{
	//ifstream filein("..//data.txt", ios::in);
	string StrIn, StrOut, str1;
	long cursor = 0, ptr1;
	long i;
	bool flag, insert = true;
	StrOut.clear();
	while (cin>>StrIn && StrIn != "EndOfInput")
	{
		if (StrIn == "EndWithEndl")
		{
			cout<<StrOut<<endl<<endl;
			StrOut.clear();
			cursor = 0;
		}
		else if (StrIn == "Left")
		{
			cursor --;
			if (cursor < 0)
			{
				cursor = 0;
			}
		}
		else if (StrIn == "Right")
		{
			cursor ++;
			if (cursor > StrOut.size())
			{
				cursor = StrOut.size();
			}
		}
		else if (StrIn == "CtrlLeft")
		{
			if (cursor == 0)
			{
				;	
			}
			else if (StrOut.at(cursor - 1) == ' ')
			{
				for (i=cursor-2; i>=0; i--)
				{
					if (StrOut.at(i) == ' ')
					{
						cursor = i + 1;
						break;
					}
				}
			}
			else
			{
				for (i=cursor-1; i>=0; i++)
				{
					if (StrOut.at(i) == ' ')
					{
						cursor = i + 1;
						break;
					}
				}
			}
		}
		else if (StrIn == "CtrlRight")
		{;
			for (i=cursor; i<StrOut.size(); i++)
			{
				if (StrOut.at(i) == ' ')
				{
					cursor = i + 1;
					break;
				}
			}
		}
		else if (StrIn == "Home")
		{
			flag = false;
			for (i=cursor-1; i>=0; i--)
			{
				if (StrOut.at(i) == '\n')
				{
					cursor = i + 1;
					flag = true;
					break;
				}
			}
			if (flag == false)
			{
				cursor = 0;
			}
		}
		else if (StrIn == "End")
		{
			flag = false;
			for (i=cursor; i<StrOut.size(); i++)
			{
				if (StrOut.at(i) == '\n')
				{
					cursor = i;
					flag = true;
					break;
				}
			}
			if (flag == false)
			{
				cursor = StrOut.size();
			}
		}
		else if (StrIn == "Insert")
		{
			insert = ! insert;
		}
		else if (StrIn == "Delete")
		{
			if (StrOut.size() > 0 && cursor < StrOut.size())
			{
				StrOut.erase(cursor, 1);
			}
		}
		else if (StrIn == "Backspace")
		{
			if (cursor > 0)
			{
				StrOut.erase(cursor - 1, 1);
				cursor --;
			}
		}
		else if (StrIn == "Blankspace")
		{
			if (insert == true)
			{
				StrOut.insert(cursor, " ");
			}
			else
			{
				StrOut.replace(cursor, StrIn.size(), " ");
			}
			cursor ++;
		}
		else if (StrIn == "Press")
		{
			cin>>str1;
			if (insert == true)
			{
				StrOut.insert(cursor, str1);
			}
			else
			{
				StrOut.replace(cursor, StrIn.size(), StrIn);
			}
			cursor += str1.size();
		}
		else if (StrIn == "Enter")
		{
			if (insert == true)
			{
				StrOut.insert(cursor, "\n");
			}
			else
			{
				StrOut.replace(cursor, 1, "\n");
			}
			cursor ++;
		}
	}
	//getchar();getchar();
	return 0;
}