//1082Stockbroker Grapevine
#define _FILE_DEBUG_
//#define _C_LAN_
//#define _DEBUG_OUTPUT_
#ifdef _FILE_DEBUG_
#include <fstream>
#endif
#include <iostream>
#include <stdio.h>
#include <limits.h>
using namespace std;

int main(int argc, char *argv[])
{
#ifdef _FILE_DEBUG_
	ifstream fin;
	fin.open("../input.txt");
	cin.rdbuf(fin.rdbuf()); // assign file's streambuf to cin
#ifdef _C_LAN_
	freopen("../input.txt", "r", stdin);
#endif
#endif
#ifdef _FILE_DEBUG_
	ofstream fout;
	fout.open("../output.txt");
	cout.rdbuf(fout.rdbuf()); // assign file's streambuf to cout
#ifdef _C_LAN_
	freopen("../output.txt", "w", stdout);
#endif
#endif

	int person_sum, mat[110][110], contact_sum, contact, time, max, min, begin;
	while (cin >> person_sum && person_sum > 0)
	{
		for (int i = 0; i < person_sum; ++ i)
		{
			for (int j = 0; j < person_sum; ++ j)
			{
				mat[i][j] = INT_MAX / 2;
			}
			mat[i][i] = 0;
		}
		for (int i = 0; i < person_sum; ++ i)
		{
			cin >> contact_sum;
			for (int j = 0; j < contact_sum; ++ j)
			{
				cin >> contact >> time;
				mat[i][contact - 1] = time;
			}
		}
		for (int k = 0; k < person_sum; ++ k)
		{
			for (int i = 0; i < person_sum; ++ i)
			{
				for (int j = 0; j < person_sum; ++ j)
				{
					if (mat[i][j] > mat[i][k] + mat[k][j])
					{
						mat[i][j] = mat[i][k] + mat[k][j];
					}
				}
			}
		}
		min = INT_MAX / 2;
		for (int i = 0; i < person_sum; ++ i)
		{
			max = 0;
			for (int j = 0; j < person_sum; ++ j)
			{
				if (max < mat[i][j])
				{
					max = mat[i][j];
				}
			}
			if (min > max)
			{
				min = max;
				begin = i;
			}
		}
		if (min == INT_MAX / 2)
		{
			cout << "disjoint" << endl;
		}
		else
		{
			cout << begin + 1 << " " << min << endl;
		}
	}

	return 0;
}