//156 - Ananagrams
//#define _FILE_IN_
//#define _FILE_OUT_
//#define _C_LAN_
#ifdef _FILE_IN_
#include <fstream>
#endif

#include <iostream>
#include <stdio.h>
#include <string>
#include <vector>
#include <set>
using namespace std;

int main()
{
#ifdef _FILE_IN_
	ifstream fin;
	fin.open("input.txt");
	cin.rdbuf(fin.rdbuf()); // assign file's streambuf to cin
#ifdef _C_LAN_
	freopen("input.txt", "r", stdin);
#endif
#endif
#ifdef _FILE_OUT_
	ofstream fout;
	fout.open("output.txt");
	cout.rdbuf(fout.rdbuf()); // assign file's streambuf to cout
#ifdef _C_LAN_
	freopen("output.txt", "w", stdout);
#endif
#endif

	string str_tmp;
	set<string> origin_word_set, word_set, anagram_set;
	set<string>::iterator it_ws, it_ows;
	multiset<char> single_word_set;
	multiset<char>::iterator it_sws;
	origin_word_set.clear();
	word_set.clear();
	anagram_set.clear();
	while (cin >> str_tmp && str_tmp.compare("#") != 0)
	{
		origin_word_set.insert(str_tmp);
		single_word_set.clear();
		for (int i = 0; i < str_tmp.size(); i ++)
		{
			if (str_tmp.at(i) < 'a')
			{
				str_tmp[i] += 'a' - 'A';
			}
			single_word_set.insert(str_tmp.at(i));
		}
		str_tmp.clear();
		for (it_sws = single_word_set.begin(); it_sws != single_word_set.end(); it_sws ++)
		{
			str_tmp += *it_sws;
		}
		it_ws = word_set.find(str_tmp);
		if (it_ws == word_set.end())
		{
			word_set.insert(str_tmp);
		}
		else
		{
			anagram_set.insert(str_tmp);
			word_set.erase(it_ws);
		}
	}
	for (it_ows = origin_word_set.begin(); it_ows != origin_word_set.end(); it_ows ++)
	{
		str_tmp = *it_ows;
		single_word_set.clear();
		for (int i = 0; i < str_tmp.size(); i ++)
		{
			if (str_tmp.at(i) < 'a')
			{
				str_tmp[i] += 'a' - 'A';
			}
			single_word_set.insert(str_tmp.at(i));
		}
		str_tmp.clear();
		for (it_sws = single_word_set.begin(); it_sws != single_word_set.end(); it_sws ++)
		{
			str_tmp += *it_sws;
		}
		it_ws = anagram_set.find(str_tmp);
		if (it_ws == anagram_set.end())
		{
			cout << *it_ows << endl;
		}
	}

#ifdef _FILE_IN_
#ifndef _FILE_OUT_
	system("pause");
#endif
#endif
	return 0;
}