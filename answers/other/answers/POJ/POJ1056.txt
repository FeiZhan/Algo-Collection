//1056 IMMEDIATE DECODABILITY
//#define _FILE_IN_
//#define _FILE_OUT_
//#define _C_LAN_
#ifdef _FILE_IN_
#include <fstream>
#endif

#include <iostream>
#include <stdio.h>
#include <string>
#include <vector>
using namespace std;

int main()
{
#ifdef _FILE_IN_
	ifstream fin;
	fin.open("input.txt");
	cin.rdbuf(fin.rdbuf()); // assign file's streambuf to cin
#ifdef _C_LAN_
	freopen("input.txt", "r", stdin);
#endif
#endif
#ifdef _FILE_OUT_
	ofstream fout;
	fout.open("output.txt");
	cout.rdbuf(fout.rdbuf()); // assign file's streambuf to cout
#ifdef _C_LAN_
	freopen("output.txt", "w", stdout);
#endif
#endif

	bool is_decodable;
	int case_num = 0;
	string code;
	vector<string> code_vec;

	while (cin >> code && cin.eof() == false)
	{
		case_num ++;
		is_decodable = true;
		code_vec.push_back(code);
		while (cin >> code && code.compare("9") != NULL)
		{
			code_vec.push_back(code);
		}
		for (vector<string>::iterator it = code_vec.begin()
			; it != code_vec.end(); it ++)
		{
			for (vector<string>::iterator it2 = code_vec.begin()
				; it2 != code_vec.end(); it2 ++)
			{
				if (it != it2 && (*it).size() <= (*it2).size()
					&& (*it) == (*it2).substr(0, (*it).size()))
				{
					is_decodable = false;
					break;
				}
			}
		}
		if (case_num > 1)
		{
			cout << endl;
		}
		if (is_decodable == true)
		{
			cout << "Set " << case_num << " is immediately decodable";
		}
		else
		{
			cout << "Set " << case_num << " is not immediately decodable";
		}
		code_vec.clear();
	}

#ifdef _FILE_IN_
#ifndef _FILE_OUT_
	system("pause");
#endif
#endif
	return 0;
}