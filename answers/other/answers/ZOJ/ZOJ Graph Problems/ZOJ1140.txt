//ZOJ 1140 - Courses 
#define _FILE_DEBUG_
//#define _C_LAN_
//#define _DEBUG_OUTPUT_
#ifdef _FILE_DEBUG_
#include <fstream>
#endif
#include <iostream>
#include <stdio.h>
using namespace std;

#include <memory.h>
#define MAX 310
int course_sum, stu_sum, match[MAX];
bool map[MAX][MAX], is_visited[MAX];
bool dfs(int now)
{
	for (int i = 1; i <= stu_sum; ++ i)
	{
		if (map[now][i] && is_visited[i] == false)
		{
			is_visited[i] = true;
			if (match[i] == 0 || dfs(match[i]))	// so the "now" can't be 0.
			{
				match[i] = now;
				return true;
			}
		}
	}
	return false;
}
int main(int argc, char *argv[])
{
#ifdef _FILE_DEBUG_
	ifstream fin;
	fin.open("../input.txt");
	cin.rdbuf(fin.rdbuf());
#ifdef _C_LAN_
	freopen("../input.txt", "r", stdin);
#endif
#endif
#ifdef _FILE_DEBUG_
	ofstream fout;
	fout.open("../output.txt");
	cout.rdbuf(fout.rdbuf());
#ifdef _C_LAN_
	freopen("../output.txt", "w", stdout);
#endif
#endif

	int case_sum, cnt, stu;
	cin >> case_sum;
	while (case_sum --)
	{
		memset(map, false, sizeof(map));
		memset(match, 0, sizeof(match));
		cin >> course_sum >> stu_sum;
		for (int i = 1; i <= course_sum; ++ i)
		{
			cin >> cnt;
			while (cnt --)
			{
				cin >> stu;
				map[i][stu] = true;
			}
		}
		cnt = 0;
		for (int i = 1; i <= course_sum; ++ i)
		{
			memset(is_visited, false, sizeof(is_visited));
			cnt += dfs(i);
		}
		cout << ((cnt == course_sum) ? "YES" : "NO") << endl;
	}

	return 0;
}