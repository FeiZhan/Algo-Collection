//1234Chopsticks
#define _FILE_DEBUG_
//#define _C_LAN_
//#define _DEBUG_OUTPUT_
#ifdef _FILE_DEBUG_
#include <fstream>
#endif
#include <iostream>
#include <stdio.h>
using namespace std;

#define MAX_NUM 5010
long dp[MAX_NUM][1010], chop[MAX_NUM];
int main()
{
#ifdef _FILE_DEBUG_
	ifstream fin;
	fin.open("../input.txt");
	cin.rdbuf(fin.rdbuf()); // assign file's streambuf to cin
#ifdef _C_LAN_
	freopen("../input.txt", "r", stdin);
#endif
#endif
#ifdef _FILE_DEBUG_
	ofstream fout;
	fout.open("../output.txt");
	cout.rdbuf(fout.rdbuf()); // assign file's streambuf to cout
#ifdef _C_LAN_
	freopen("../output.txt", "w", stdout);
#endif
#endif

	int case_sum, gue_sum, chop_sum;
	long tmp;
	cin >> case_sum;
	while (case_sum --)
	{
		cin >> gue_sum >> chop_sum;
		gue_sum += 8;
		for (int i = 0; i < chop_sum; i ++)
		{
			cin >> chop[i];
		}
		for (int i = 0; i < chop_sum; i ++)
		{
			dp[i][0] = 0;
			for (int j = 1; j <= gue_sum; j ++)
			{
				dp[i][j] = -1;
			}
		}
		for (int i = chop_sum - 3; i >= 0; i --)
		{
			for (int j = 1; j <= gue_sum; j ++)
			{
				dp[i][j] = dp[i + 1][j];
				if (dp[i + 2][j - 1] > -1 && chop_sum - i >= 3 * j)
				{
					tmp = dp[i + 2][j - 1]
						+ (chop[i + 1] - chop[i]) * (chop[i + 1] - chop[i]);
					if (tmp < dp[i][j] || dp[i][j] == -1)
					{
						dp[i][j] = tmp;
					}
				}
			}
		}
		cout << dp[0][gue_sum] << endl;
	}
	return 0;
}