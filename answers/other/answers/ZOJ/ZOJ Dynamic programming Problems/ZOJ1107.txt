//1107FatMouse and Cheese
#define _FILE_DEBUG_
//#define _C_LAN_
//#define _DEBUG_OUTPUT_
#ifdef _FILE_DEBUG_
#include <fstream>
#endif
#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <memory.h>
#define MAX_GRID 101
using namespace std;

int grid[MAX_GRID][MAX_GRID];
int grid_max[MAX_GRID][MAX_GRID];
int grid_next[MAX_GRID][MAX_GRID][2];
int grid_size, speed;
int dist(int x1, int y1, int x2, int y2)
{
	if (x1 != x2 && y1 != y2)
		return speed + 1;
	else
		return abs(x1 - x2) + abs(y1 - y2);
}
void Dfs(int grid_x, int grid_y)
{
	if (grid_max[grid_x][grid_y] > 0)
		return;
	int max = 0;
	for (int i = 0; i < grid_size; i ++)
	{
		for (int j = 0; j < grid_size; j ++)
		{
			if (dist(i, j, grid_x, grid_y) <= speed
				&& grid[i][j] > grid[grid_x][grid_y])
			{
				Dfs(i, j);
				if (grid_max[i][j] > max)
				{
					max = grid_max[i][j];
					grid_next[grid_x][grid_y][0] = i;
					grid_next[grid_x][grid_y][1] = j;
				}
			}
		}
	}
	grid_max[grid_x][grid_y] = max + grid[grid_x][grid_y];
}
int main()
{
#ifdef _FILE_DEBUG_
	ifstream fin;
	fin.open("../input.txt");
	cin.rdbuf(fin.rdbuf()); // assign file's streambuf to cin
#ifdef _C_LAN_
	freopen("input.txt", "r", stdin);
#endif
#endif
#ifdef _FILE_DEBUG_
	ofstream fout;
	fout.open("../output.txt");
	cout.rdbuf(fout.rdbuf()); // assign file's streambuf to cout
#ifdef _C_LAN_
	freopen("output.txt", "w", stdout);
#endif
#endif

	while (cin >> grid_size >> speed && grid_size >= 0)
	{
		for (int i = 0; i < grid_size; i ++)
		{
			for (int j = 0; j < grid_size; j ++)
			{
				cin >> grid[i][j];
			}
		}
		memset(grid_max, 0x0, sizeof(grid_max));
		memset(grid_next, 0x0, sizeof(grid_next));
		Dfs(0, 0);
		cout << grid_max[0][0] << endl;
	}
	return 0;
}