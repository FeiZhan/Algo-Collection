//1484Minimum Inversion Number
#define _FILE_DEBUG_
//#define _C_LAN_
//#define _DEBUG_OUTPUT_
#ifdef _FILE_DEBUG_
#include <fstream>
#endif
#include <iostream>
#include <stdio.h>
using namespace std;
#include <limits.h>
#include <memory.h>

int num[5010], inv[5010], inv_sum[5010];
int main()
{
#ifdef _FILE_DEBUG_
	ifstream fin;
	fin.open("../input.txt");
	cin.rdbuf(fin.rdbuf()); // assign file's streambuf to cin
#ifdef _C_LAN_
	freopen("../input.txt", "r", stdin);
#endif
#endif
#ifdef _FILE_DEBUG_
	ofstream fout;
	fout.open("../output.txt");
	cout.rdbuf(fout.rdbuf()); // assign file's streambuf to cout
#ifdef _C_LAN_
	freopen("../output.txt", "w", stdout);
#endif
#endif

	int num_sum, min_inv;
	while (cin >> num_sum)
	{
		memset(inv_sum, 0x0, sizeof(inv_sum));
		for (int i = 0; i < num_sum; i ++)
		{
			cin >> num[i];
			inv[i] = 0;
			for (int j = 0; j < i; j ++)
			{
				if (num[j] > num[i])
				{
					inv[i] ++;
				}
			}
			inv_sum[0] += inv[i];
		}
		for (int i = 0; i < num_sum - 1; i ++)
		{
			inv_sum[i + 1] = inv_sum[i];
			for (int j = 0; j < num_sum; j ++)
			{
				if (i == j)
					continue;
				if (num[j] > num[i])
				{
					inv_sum[i + 1] ++;
				}
				else if (num[j] < num[i])
				{
					inv_sum[i + 1] --;
				}
			}
		}
		min_inv = INT_MAX;
		for (int i = 0; i < num_sum; i ++)
		{
			//cout << "num " << i << " inversion " << inv_sum[i] << endl;
			if (inv_sum[i] < min_inv)
				min_inv = inv_sum[i];
		}
		cout << min_inv << endl;
	}
	return 0;
}