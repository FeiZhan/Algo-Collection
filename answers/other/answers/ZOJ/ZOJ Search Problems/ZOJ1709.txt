//1709Oil Deposits
#define _FILE_DEBUG_
//#define _C_LAN_
//#define _DEBUG_OUTPUT_
#ifdef _FILE_DEBUG_
#include <fstream>
#endif
#include <iostream>
#include <stdio.h>
using namespace std;
#include <string>

const int GRID_ADJ[8][2] = {{1, 0}, {1, -1}, {1, 1}, {0, -1}, {0, 1}, {-1, 0}
	, {-1, -1}, {-1, 1}};
int grid_s[2], grid[110][110], grid_f[110][110], oil_num;
void Dfs(int grid_x, int grid_y)
{
	int target[2];
	for (int i = 0; i < 8; i ++)
	{
		target[0] = grid_x + GRID_ADJ[i][0];
		target[1] = grid_y + GRID_ADJ[i][1];
		if (target[0] < 0 || target[0] >= grid_s[0] || target[1] < 0
			|| target[1] >= grid_s[1])
		{
			continue;
		}
		if (grid[target[0]][target[1]] == 1 && grid_f[target[0]][target[1]] == 0)
		{
			grid_f[target[0]][target[1]] = oil_num;
			Dfs(target[0], target[1]);
		}
	}
}
int main()
{
#ifdef _FILE_DEBUG_
	ifstream fin;
	fin.open("../input.txt");
	cin.rdbuf(fin.rdbuf()); // assign file's streambuf to cin
#ifdef _C_LAN_
	freopen("../input.txt", "r", stdin);
#endif
#endif
#ifdef _FILE_DEBUG_
	ofstream fout;
	fout.open("../output.txt");
	cout.rdbuf(fout.rdbuf()); // assign file's streambuf to cout
#ifdef _C_LAN_
	freopen("../output.txt", "w", stdout);
#endif
#endif

	string line;
	while (cin >> grid_s[0] >> grid_s[1] && grid_s[0] > 0 && grid_s[1] > 0)
	{
		for (int i = 0; i < grid_s[0]; i ++)
		{
			cin >> line;
			for (int j = 0; j < line.size(); j ++)
			{
				switch (line.at(j))
				{
				case '*':
					grid[i][j] = 0;
					break;
				case '@':
					grid[i][j] = 1;
					break;
				default:
					break;
				}
				grid_f[i][j] = 0;
			}
		}
		oil_num = 0;
		for (int i = 0; i < grid_s[0]; i ++)
		{
			for (int j = 0; j < grid_s[1]; j ++)
			{
				if (grid[i][j] == 1 && grid_f[i][j] == 0)
				{
					oil_num ++;
					Dfs(i, j);
				}
			}
		}
		cout << oil_num << endl;
	}
	return 0;
}