//1170String Matching
#define _FILE_DEBUG_
//#define _C_LAN_
//#define _DEBUG_OUTPUT_
#ifdef _FILE_DEBUG_
#include <fstream>
#endif
#include <iostream>
#include <stdio.h>
#include <string>
using namespace std;

void Gcd(int &num1, int &num2)
{
	int max, min, temp;
	max = num1 > num2 ? num1 : num2;
	min = num1 <= num2 ? num1 : num2;
	while (max % min != 0)
	{
		temp = min;
		min = max % min;
		max = temp;
	}
	num1 /= min;
	num2 /= min;
	//cout < < "最大公约数   : " < <min < <endl; 
	//cout < < "最小公倍数   : " < <a*b/min < <endl; 
} 
int main()
{
#ifdef _FILE_DEBUG_
	ifstream fin;
	fin.open("../input.txt");
	cin.rdbuf(fin.rdbuf()); // assign file's streambuf to cin
#ifdef _C_LAN_
	freopen("../input.txt", "r", stdin);
#endif
#endif
#ifdef _FILE_DEBUG_
	ofstream fout;
	fout.open("../output.txt");
	cout.rdbuf(fout.rdbuf()); // assign file's streambuf to cout
#ifdef _C_LAN_
	freopen("../output.txt", "w", stdout);
#endif
#endif

	string raw_str[2], str[2];
	int min_size, same_cnt, max_cnt, num[2];
	while (cin >> raw_str[0] >> raw_str[1] && raw_str[0].compare("-1") != 0)
	{
		max_cnt = 0;
		str[0] = raw_str[0];
		str[0].insert(0, raw_str[1].size(), ' ');
		str[1] = raw_str[1];
		for (int i = 0; i < str[0].size(); i ++)
		{
			min_size = str[0].size() - i;
			min_size = (min_size < str[1].size()) ? min_size : str[1].size();
			same_cnt = 0;
			for (int j = 0; j < min_size; j ++)
			{
				if (str[0].at(i + j) == str[1].at(j))
				{
					same_cnt ++;
				}
			}
			if (same_cnt > max_cnt)
			{
				max_cnt = same_cnt;
			}
		}
		num[0] = max_cnt * 2;
		num[1] = raw_str[0].size() + raw_str[1].size();
		cout << "appx(" << raw_str[0] << "," << raw_str[1] << ") = ";
		if (num[0] == 0)
			cout << 0;
		else if (num[0] == num[1])
			cout << 1;
		else
		{
			Gcd(num[0], num[1]);
			cout << num[0] << "/" << num[1];
		}
		cout << endl;
	}

	return 0;
}