//1007 DNA Sorting
//#define _FILE_IN_
//#define _FILE_OUT_
//#define _C_LAN_
#ifdef _FILE_IN_
#include <fstream>
#endif

#include <iostream>
#include <stdio.h>
#include <string>
#include <map>
using namespace std;

int main()
{
#ifdef _FILE_IN_
	ifstream fin;
	fin.open("input.txt");
	cin.rdbuf(fin.rdbuf()); // assign file's streambuf to cin
#ifdef _C_LAN_
	freopen("input.txt", "r", stdin);
#endif
#endif
#ifdef _FILE_OUT_
	ofstream fout;
	fout.open("output.txt");
	cout.rdbuf(fout.rdbuf()); // assign file's streambuf to cout
#ifdef _C_LAN_
	freopen("output.txt", "w", stdout);
#endif
#endif

	int len, sum, unsorted;
	string dna;
	multimap<int, string> dna_map;

	cin >> len >> sum;
	for (int i = 0; i < sum; i ++)
	{
		cin >> dna;
		unsorted = 0;
		for (int j = 0; j < dna.size(); j ++)
		{
			for (int k = j + 1; k < dna.size(); k ++)
			{
				if (dna.at(j) > dna.at(k))
				{
					unsorted ++;
				}
			}
		}
		dna_map.insert(pair<int,string> (unsorted, dna));
	}
	for (multimap<int, string>::iterator it = dna_map.begin(); it != dna_map.end(); it ++)
	{
		if (it != dna_map.begin())
		{
			cout << endl;
		}
		cout << (*it).second;
	}

#ifdef _FILE_IN_
#ifndef _FILE_OUT_
	system("pause");
#endif
#endif
	return 0;
}