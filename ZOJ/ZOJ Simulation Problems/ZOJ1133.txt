//1133Smith Numbers
#include <iostream>
#include <math.h>
//#include <fstream>
//#define cin filein
using namespace std;
int main()
{
	//ifstream filein("..//data.txt", ios::in);

	long factor[10000];
	long raw_num;
	while (cin>>raw_num && raw_num != 0)
	{
		while (true)
		{
			raw_num ++;
			long num = raw_num;
			int factor_num = -1;
			while (num > 1)
			{
				//long sqrt_num = floor(sqrt(double(num)) + .5);
				int i;
				{
					for (i=2; i * i <= num; i++)
					{
						if (num % i == 0)
						{
							factor_num ++;
							factor[factor_num] = i;
							num = num / i;
							break;
						}
					}
					if (i * i > num)
					{
						factor_num ++;
						factor[factor_num] = num;
						break;
					}
				}
			}

			long count[2] = {0, 0};
			if (factor_num <= 0)	//prime
			{
				continue;
			}
			else
			{
				long num = raw_num;
				while (num >= 1)
				{
					count[0] += num % 10;
					num /= 10;
				}
				for (int i=0; i<=factor_num; i++)
				{
					long num = factor[i];
					while (num >= 1)
					{
						count[1] += num % 10;
						num /= 10;
					}
				}
			}
			//cout<<"raw "<<raw_num<<endl;
			//cout<<"count "<<count[0]<<" "<<count[1]<<endl;
			if (count[0] == count[1])
			{
				cout<<raw_num<<endl;
				break;
			}
		}

	}

	//getchar();getchar();
	return 0;
}