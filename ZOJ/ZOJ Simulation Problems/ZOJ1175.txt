//1175 Word Process Machine
#define _FILE_DEBUG_
//#define _C_LAN_
//#define _DEBUG_OUTPUT_
#ifdef _FILE_DEBUG_
#include <fstream>
#endif
#include <iostream>
#include <stdio.h>
using namespace std;

#include <algorithm>
#include <string>
string input, source, code, result;

int main(int argc, char *argv[])
{
#ifdef _FILE_DEBUG_
	ifstream fin;
	fin.open("../input.txt");
	cin.rdbuf(fin.rdbuf());
#ifdef _C_LAN_
	freopen("../input.txt", "r", stdin);
#endif
#endif
#ifdef _FILE_DEBUG_
	ofstream fout;
	fout.open("../output.txt");
	cout.rdbuf(fout.rdbuf());
#ifdef _C_LAN_
	freopen("../output.txt", "w", stdout);
#endif
#endif

	int case_sum, str_sum, front;
	cin >> case_sum;
	while (case_sum --)
	{
		source.clear();
		code.clear();
		result.clear();
		cin >> str_sum;
		cin.ignore();	// good
		for (int i = 0; i < str_sum; ++ i)
		{
			getline(cin, input);
			if (input.size())
			{
				source += input;
			}
		}
		while (cin >> input)
		{
			for (int i = 0; i < input.size(); ++ i)
			{
				if (input[i] == ' ')
				{
					input.erase(i, 1);
				}
				if (i && input[i] == 'R' && input[i - 1] == 'R')
				{
					input.erase(i - 1, 2);
				}
			}
			code += input;
			if (input.size() && input[input.size() - 1] == '#')
			{
				break;
			}
		}
		front = 0;
		for (int i = 0; i < code.size() - 1; ++ i)
		{
			if (! source.size())
			{
				break;
			}
			if (code.at(i) == 'R')	//虚拟转向
			{
				if (! front)
				{
					front = source.size() - 1;
				}
				else
				{
					front = 0;
				}
			}
			else if (code.at(i) == 'G')
			{
				int j = i;
				while (code.at(j) == 'G' && j - i < source.size()) //集体移位
				{
					++ j;
				}
				if (! front)
				{
					string tmp(source, 0, j - i);
					result += tmp;
					source.erase(0, j - i);
				} else
				{
					string tmp(source, source.size() - (j - i), j - i);
					reverse(tmp.begin(), tmp.end());
					result += tmp;
					source.erase(source.size() - 1, j - i);
				}
				i = j - 1;
			}
		}
		for (int i = 0; i < result.size(); ++ i)
		{
			if (i && ! (i % 80))
			{
				cout << endl;
			}
			cout << result.at(i);
		}
		if (result.size() && ! (result.size() % 80) && case_sum)
		{
			cout << endl;
		} else if (case_sum)
		{
			cout << endl << endl;
		}
	}

	return 0;
}