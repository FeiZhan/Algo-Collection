//1202Divide and Count
#define _FILE_DEBUG_
//#define _C_LAN_
//#define _DEBUG_OUTPUT_
#ifdef _FILE_DEBUG_
#include <fstream>
#endif
#include <iostream>
#include <stdio.h>
using namespace std;
#include <memory.h>
int main()
{
#ifdef _FILE_DEBUG_
	ifstream fin;
	fin.open("../input.txt");
	cin.rdbuf(fin.rdbuf()); // assign file's streambuf to cin
#ifdef _C_LAN_
	freopen("../input.txt", "r", stdin);
#endif
#endif
#ifdef _FILE_DEBUG_
	ofstream fout;
	fout.open("../output.txt");
	cout.rdbuf(fout.rdbuf()); // assign file's streambuf to cout
#ifdef _C_LAN_
	freopen("../output.txt", "w", stdout);
#endif
#endif

	int combo[13][13];
	for (int i = 0; i < 13; i ++)
	{
		combo[0][i] = 1;
		combo[1][i] = i;
		combo[i][i] = 1;
	}
	for (int i = 2; i < 13; i ++)
	{
		for (int j = 2; j < i; j ++)
		{
			combo[j][i] = combo[j][i - 1] + combo[j - 1][i - 1];
		}
	}
	int fact[13];
	fact[0] = 1;
	for (int i = 1; i < 13; i ++)
	{
		fact[i] = i * fact[i - 1];
	}
	int box_sum, box[13], box_total, duplicate[13], num;
	while (cin >> box_sum)
	{
		box_total = 0;
		memset(duplicate, 0, sizeof(duplicate));
		for (int i = 0; i < box_sum; i ++)
		{
			cin >> box[i];
			box_total += box[i];
			duplicate[box[i]] ++;
		}
		num = 1;
		for (int i = 0; i < box_sum; i ++)
		{
			num *= combo[box[i]][box_total];
			box_total -= box[i];
		}
		for (int i = 1; i < 13; i ++)
		{
			if (duplicate[i] > 1)
			{
				num /= fact[duplicate[i]];
			}
		}
		cout << num << endl;
	}
	return 0;
}