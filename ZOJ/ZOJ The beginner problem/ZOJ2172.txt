//2172Symmetric Order
#define _FILE_DEBUG_
//#define _C_LAN_
//#define _DEBUG_OUTPUT_
#ifdef _FILE_DEBUG_
#include <fstream>
#endif
#include <iostream>
#include <stdio.h>
using namespace std;

#include <string>
#include <vector>

int main()
{
#ifdef _FILE_DEBUG_
	ifstream fin;
	fin.open("../input.txt");
	cin.rdbuf(fin.rdbuf()); // assign file's streambuf to cin
#ifdef _C_LAN_
	freopen("../input.txt", "r", stdin);
#endif
#endif
#ifdef _FILE_DEBUG_
	ofstream fout;
	fout.open("../output.txt");
	cout.rdbuf(fout.rdbuf()); // assign file's streambuf to cout
#ifdef _C_LAN_
	freopen("../output.txt", "w", stdout);
#endif
#endif

	int name_sum, set_num = 0;
	string name_tmp;
	vector<string> name_vec;
	while (cin >> name_sum && name_sum > 0)
	{
		set_num ++;
		cout << "SET " << set_num << endl;
		name_vec.clear();
		for (int i = 0; i < name_sum; i ++)
		{
			cin >> name_tmp;
			name_vec.push_back(name_tmp);
		}
		for (int i = 0; i < name_sum; i += 2)
		{
			cout << name_vec.at(i) << endl;
		}
		for (int i = name_sum - name_sum % 2 - 1; i >= 0; i -= 2)
		{
			cout << name_vec.at(i) << endl;
		}
	}
	return 0;
}