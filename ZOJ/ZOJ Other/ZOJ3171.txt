//3171The Hidden 7's
#define _FILE_DEBUG_
//#define _C_LAN_
//#define _DEBUG_OUTPUT_
#ifdef _FILE_DEBUG_
#include <fstream>
#endif
#include <iostream>
#include <stdio.h>
using namespace std;

#include <string>
#include <memory.h>
#define MAX 10010
const string Seven = "seven";
long long cnt;
long long dp[MAX][5];
bool dfs(string &str, int str_ptr, int sev_ptr)
{
	for (string::size_type i = str_ptr; i < str.size(); ++ i)
	{
		if (str.at(i) == Seven.at(sev_ptr))
		{
			if (sev_ptr == Seven.size() - 1)
			{
				cnt ++;
				continue;
			}
			dfs(str, i + 1, sev_ptr + 1);
		}
	}
	return false;
}
int main(int argc, char *argv[])
{
#ifdef _FILE_DEBUG_
	ifstream fin;
	fin.open("../input.txt");
	cin.rdbuf(fin.rdbuf()); // assign file's streambuf to cin
#ifdef _C_LAN_
	freopen("../input.txt", "r", stdin);
#endif
#endif
#ifdef _FILE_DEBUG_
	ofstream fout;
	fout.open("../output.txt");
	cout.rdbuf(fout.rdbuf()); // assign file's streambuf to cout
#ifdef _C_LAN_
	freopen("../output.txt", "w", stdout);
#endif
#endif

	string str;
	while (cin >> str)
	{
		for (string::size_type i = 0; i < str.size(); ++ i)
		{
			if (str.at(i) >= 'A' && str.at(i) <= 'Z')
			{
				str[i] += 'a' - 'A';
			}
		}
		cnt = 0;
		//dfs(str, 0, 0);
		memset(dp, 0, sizeof(dp));
		for (size_t i = 0; i < str.size(); ++ i)
		{
			if (str.at(i) == Seven.at(0))
				dp[i][0] = 1;
		}
		for (size_t i = 1; i < str.size(); ++ i)
		{
			dp[i][0] += dp[i - 1][0];
			for (size_t j = 1; j < 5; ++ j)
			{
				if (i < j)
					break;
				dp[i][j] += dp[i - 1][j];
				if (str.at(i) == Seven.at(j))
				{
					dp[i][j] += dp[i - 1][j - 1];
				}
			}
		}
		cout << dp[str.size() - 1][Seven.size() - 1] << endl;
	}

	return 0;
}