//2401Zipper
#define _FILE_DEBUG_
//#define _C_LAN_
//#define _DEBUG_OUTPUT_
#ifdef _FILE_DEBUG_
#include <fstream>
#endif
#include <iostream>
#include <stdio.h>
using namespace std;
#include <string>
#include <memory.h>

int main(int argc, char *argv[])
{
#ifdef _FILE_DEBUG_
	ifstream fin;
	fin.open("../input.txt");
	cin.rdbuf(fin.rdbuf()); // assign file's streambuf to cin
#ifdef _C_LAN_
	freopen("../input.txt", "r", stdin);
#endif
#endif
#ifdef _FILE_DEBUG_
	ofstream fout;
	fout.open("../output.txt");
	cout.rdbuf(fout.rdbuf()); // assign file's streambuf to cout
#ifdef _C_LAN_
	freopen("../output.txt", "w", stdout);
#endif
#endif

	int case_sum;
	string input[2], addition;
	bool dp[210][210];
	cin >> case_sum;
	for (int i = 0; i < case_sum; ++ i)
	{
		cin >> input[0] >> input[1] >> addition;
		memset(dp, 0, sizeof(dp));
		dp[0][0] = true;
		for (string::size_type j = 0; j <= input[0].size(); ++ j)
		{
			for (string::size_type k = 0; k <= input[1].size(); ++ k)
			{
				if (dp[j][k])
				{
					if (j < input[0].size()
						&& input[0].at(j) == addition.at(j + k))
						dp[j + 1][k] = true;
					if (k < input[1].size()
						&& input[1].at(k) == addition.at(j + k))
						dp[j][k + 1] = true;
				}
			}
		}
		cout << "Data set " << i + 1 << ": ";
		if (dp[input[0].size()][input[1].size()])
			cout << "yes";
		else
			cout << "no";
		cout << endl;
	}

	return 0;
}