//1986Bridging Signals
#define _FILE_DEBUG_
//#define _C_LAN_
//#define _DEBUG_OUTPUT_
#ifdef _FILE_DEBUG_
#include <fstream>
#endif
#include <iostream>
#include <stdio.h>
using namespace std;

#define MAX 40010
int port[MAX], seq_min[MAX], seq_len[MAX], port_sum;
int main(int argc, char *argv[])
{
#ifdef _FILE_DEBUG_
	ifstream fin;
	fin.open("../input.txt");
	cin.rdbuf(fin.rdbuf()); // assign file's streambuf to cin
#ifdef _C_LAN_
	freopen("../input.txt", "r", stdin);
#endif
#endif
#ifdef _FILE_DEBUG_
	ofstream fout;
	fout.open("../output.txt");
	cout.rdbuf(fout.rdbuf()); // assign file's streambuf to cout
#ifdef _C_LAN_
	freopen("../output.txt", "w", stdout);
#endif
#endif

	int case_sum, l, r, len_max, m;
	cin >> case_sum;
	while (case_sum --)
	{
		cin >> port_sum;
		for (int i = 0; i < port_sum; i ++)
		{
			cin >> port[i];
		}
		seq_min[0] = port[0];
		len_max = 0;
		for (int i = 0; i < port_sum; i ++)
		{
			l = 1;
			r = len_max;
			while (l <= r)
			{
				m = (l + r) / 2;
				if (seq_min[m] < port[i])
				{
					l = m + 1;
				}
				else
				{
					r = m - 1;
				}
			}
			seq_min[l] = port[i];
			seq_len[i] = l;
			len_max = (len_max < l) ? l : len_max;
		}
		cout << len_max << endl;
	}

	return 0;
}