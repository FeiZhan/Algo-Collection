//1076Gene Assembly
#include <iostream>
#include <memory.h>
using namespace std;
int ExonLength[1000], exon[1000][2], ExonSeq[1000][1000];
int GetLength(const int exon_sum, const int exon_num)
{
	if (ExonLength[exon_num] == NULL)
	{
		int max_len = 0, max_num;
		for (int i = 0; i < exon_sum; i ++)
		{
			if (i == exon_num)
			{
				continue;
			}
			else if (exon[exon_num][1] < exon[i][0])
			{
				if (ExonLength[i] == NULL)
				{
					ExonLength[i] = GetLength(exon_sum, i);
				}
				if (ExonLength[i] > max_len)
				{
					max_len = ExonLength[i];
					max_num = i;
				}
			}
		}
		int exon_seq_num = 0;
		for (int i = 0; i < exon_sum; i ++)
		{
			if (exon[exon_num][1] < exon[i][0] && ExonLength[i] == max_len)
			{
				ExonSeq[exon_num][exon_seq_num] = i;
				exon_seq_num ++;
			}
		}
		ExonLength[exon_num] = max_len + 1;
	}
	return ExonLength[exon_num];
}
void PrintSeq(const int num, const bool is_first)
{
	if (is_first == true)
	{
		cout<<num + 1;
	}
	else
		cout<<" "<<num + 1;
	for (int i = 0; i < 1000; i ++)
	{
		if (ExonSeq[num][i] != -1)
		{
			PrintSeq(ExonSeq[num][i], false);
		}
		else
			break;
	}
}
int main()
{
	int exon_sum, len, max_len, max_num;
	while (cin>>exon_sum && exon_sum != NULL)
	{
		for (int i = 0; i < exon_sum; i ++)
		{
			cin>>exon[i][0]>>exon[i][1];
		}
		max_len = NULL;
		memset(ExonLength, 0x00, sizeof(ExonLength));
		memset(ExonSeq, 0xFF, sizeof(ExonSeq));
		for (int i = 0; i < exon_sum; i ++)
		{
			len = GetLength(exon_sum, i);
			if (len > max_len)
			{
				max_len = len;
				max_num = i;
			}
		}
		//cout<<max_len<<endl;
		for (int i = 0; i < exon_sum; i ++)
		{
			if (ExonLength[i] == max_len)
			{
				PrintSeq(max_num, true);
				cout<<endl;
			}
		}
	}
	//system("pause");
	return 0;
}